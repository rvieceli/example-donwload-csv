services:
  database:
    image: postgres:14.2-alpine
    command: postgres -c 'max_connections=450' -c 'log_error_verbosity=terse' -c 'client_min_messages=error'

    ports:
      - "5432:5432"

    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

    env_file:
      - .env

    volumes:
      - postgres_data:/data/postgres

  seeder:
    build: .
    depends_on:
      database:
        condition: service_healthy

    env_file:
      - .env

    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M

    command: ["npm", "run", "seed"]

  app1: &app
    build: .
    hostname: app1
    ports:
      - "3000:3000"
    env_file:
      - .env

    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M

    depends_on:
      seeder:
        condition: service_completed_successfully

  app2:
    <<: *app
    hostname: app2
    ports:
      - "3001:3000"

  nginx:
    build: ./nginx
    ports:
      - "80:80"
    depends_on:
      - app1
      - app2

    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: 0.3G

volumes:
  postgres_data:
